---
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'
import HeroBackground from '@images/hero-background.jpg'
import HeroForeground from '@images/hero-foreground.png'

const benefitsList = [
  'Nutrición',
  'Rutina 100% personalizada',
  'Acompañamiento 24/7',
  'Comunidad exclusiva',
  'Plan personalizado',
  'Coaching en vivo'
]
---

<section
  class="overflow-hidden relative max-h-dvh md:grid md:grid-cols-2"
  style="background: radial-gradient(
      closest-side,
      rgba(22, 1, 1, .15) 0%,
      rgba(6, 0, 0, 1) 100%
    );"
>
  <div
    class="custom-padding h-dvh px-4 md:mt-10 flex flex-col justify-center max-md:justify-between relative z-20 max-w-[830px] mx-auto"
    style="padding-top: calc(clamp(5rem, 12dvw, 6.5rem));"
  >
    <h1
      class="inline-block [&>span]:text-primary-color text-white text-lg-title max-md:text-center text-balance font-alfa-slab-one leading-relaxed uppercase mt-4"
    >
      <span>Transforma tu físico sin complicarte</span> con mi plan personalizado
      de 90 días
    </h1>
    <p
      class="max-md:hidden text-sm text-pretty leading-relaxed max-lg:mb-6 mb-10"
    >
      Ayudo a hombres a transformar su físico sin dietas restrictivas y con un
      plan personalizado de 90 días.
    </p>

    <ul class="max-md:hidden grid grid-cols-2 max-lg:mb-6 mb-10 gap-2">
      {
        benefitsList.map((item) => (
          <li class="flex items-center gap-2 text-sm text-white/60">
            <Icon name="check-icon" />
            <span>{item}</span>
          </li>
        ))
      }
    </ul>

    <div
      class="flex flex-col max-md:max-w-[80%] max-md:mx-auto max-md:items-center gap-4 max-lg:gap-2"
    >
      <button
        class="bg-[#4b0a0a] rounded-md border-solid border-[#d70000] border-2 w-full py-3 font-sans text-white text-center text-balance text-md tracking-wider font-bold uppercase"
        style="box-shadow: 0px 0px 15px 0px rgba(215, 0, 0, 0.5)"
      >
        Contáctame
      </button>
      <p
        class="text-[#bbbbbb] text-center text-xs font-normal mb-6 leading-snug"
      >
        En caso de no lograrlo te devolvemos el 100% y te ayudo personalmente
        hasta conseguir el objetivo (por haberte hecho perder el tiempo).
      </p>
    </div>
  </div>

  <div class="size-fit mx-auto h-dvh md:relative flex items-end justify-center">
    <div
      class="absolute z-30 max-md:z-10 inset-0 max-md:bg-[radial-gradient(closest-side,rgba(0,0,0,0)_0%,rgba(0,0,0,0.45)_100%)] bg-[radial-gradient(closest-side,rgba(0,0,0,0)_0%,rgba(0,0,0,0.85)_100%)] pointer-events-none xl:opacity-0"
    >
    </div>
    <Icon
      id="thunder-icon"
      name="thunder-vector"
      class="transition-transform duration-1000 -translate-y-60 translate-x-40 size-full md:max-w-[80%] absolute top-0 md:z-20 max-md:text-white/50"
    />
    <Image
      id="hero-foreground"
      src={HeroForeground}
      alt="Hero Foreground"
      class="transition-transform duration-300 ease-out scale-0 opacity-0 absolute md:z-20 w-hero-foreground max-w-[900px] md:max-w-[none] h-auto"
      style="bottom: 0;"
    />

    <div
      class="overflow-hidden md:relative size-full max-md:absolute max-md:top-0 max-md:-z-10 xl:opacity-0"
      style="background: radial-gradient(closest-side,rgba(0, 0, 0, 0) 0%,rgba(0, 0, 0, 0.65) 100%);"
    >
      <Image
        src={HeroBackground}
        alt="Hero Background"
        class="size-full object-cover md:-scale-x-100"
      />
      <div
        class="backdrop-blur-sm max-md:hidden absolute inset-0 pointer-events-none"
      >
      </div>
    </div>
  </div>

  <div class="md:hidden absolute inset-0 backdrop-blur-sm -z-10"></div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const $thunderIcon = document.getElementById('thunder-icon') as HTMLElement
    const $heroForeground = document.getElementById(
      'hero-foreground'
    ) as HTMLElement
    if (!$heroForeground) return

    const observerOptions = {
      root: null,
      threshold: 0.2
    }

    const observerThunderIcon = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const { isIntersecting } = entry

          if (isIntersecting) {
            entry.target.classList.remove('-translate-y-60', 'translate-x-40')
            entry.target.classList.add('-translate-y-0', 'translate-x-0')
          } else {
            entry.target.classList.remove('-translate-y-0', 'translate-x-0')
            entry.target.classList.add('-translate-y-60', 'translate-x-40')
          }
        })
      },
      { ...observerOptions, rootMargin: '10px ' }
    )
    observerThunderIcon.observe($thunderIcon)

    const observerForeground = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const { isIntersecting } = entry

          if (isIntersecting) {
            entry.target.classList.remove('scale-0', 'opacity-0')
            entry.target.classList.add('scale-100', 'opacity-100')
          } else {
            entry.target.classList.remove('scale-100', 'opacity-100')
            entry.target.classList.add('scale-0', 'opacity-0')
          }
        })
      },
      { ...observerOptions, rootMargin: '10px' }
    )
    observerForeground.observe($heroForeground)
  })
</script>

<style>
  @keyframes thunder-strike {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  .thunder-strike {
    animation: thunder-strike 1.5s ease-in-out forwards;
  }

  .custom-padding {
    padding-bottom: calc(clamp(5rem, 12dvw, 6.5rem));
  }

  /* Media query para md */
  @media (max-width: 768px) {
    .custom-padding {
      padding-bottom: 0;
    }
  }
</style>
